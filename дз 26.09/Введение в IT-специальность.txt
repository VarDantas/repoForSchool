1. push:
   - Назначение: Эта команда позволяет "толкать" (push) ваши локальные изменения на удаленный сервер (например, GitHub).
   - Что происходит: После того, как вы внесли изменения в свой локальный репозиторий, вы можете использовать команду push, чтобы отправить эти изменения на удаленный сервер. Это позволяет другим участникам проекта получить доступ к вашим обновлениям.

2. pull:
   - Назначение: Эта команда позволяет "тянуть" (pull) изменения с удаленного сервера в ваш локальный репозиторий.
   - Что происходит: Если другие участники проекта внесли изменения в удаленный репозиторий, вы можете использовать команду pull, чтобы получить эти изменения в свой локальный репозиторий. Это поможет вам оставаться в курсе последних обновлений проекта.

3. fetch:
   - Назначение: Эта команда позволяет "забирать" (fetch) изменения с удаленного сервера, не сливая их сразу с вашим локальным репозиторием.
   - Что происходит: Когда вы используете fetch, Git загружает информацию об изменениях, но не применяет их сразу к вашему локальному репозиторию. Это позволяет вам сначала просмотреть изменения, прежде чем решить, как с ними поступить.

4. add:
   - Назначение: Эта команда позволяет "добавлять" (add) изменения в "stage" (область подготовки к фиксации).
   - Что происходит: Когда вы вносите изменения в файлы вашего проекта, Git не сразу фиксирует эти изменения. Сначала вы должны использовать команду add, чтобы поместить файлы в "stage", подготавливая их к фиксации.

5. commit:
   - Назначение: Эта команда позволяет "зафиксировать" (commit) изменения, добавленные в "stage".
   - Что происходит: После того, как вы использовали команду add для подготовки файлов к фиксации, вы можете использовать команду commit, чтобы окончательно сохранить эти изменения в вашем локальном репозитории. Каждый commit создает "снимок" вашего проекта в этот момент времени.
